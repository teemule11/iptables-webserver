########################################################
#
# options.conf
# configuration file for solowall-iptables
# solowall-iptables (c) Torsten Mueller 2014
# 
########################################################

###################################################
# YOUR ENTRIES HERE
###################################################

### [COMMON OTIONS] ###
# Delay execution of firewall rules by n seconds, if using init script at host startup
# Unless you have console access, it may be a good idea to delay initializing the firewall by a few 
# seconds to prevent you from getting locked out of your server. Once your rules are perfect, put 
# this to 0
EXECDELAY=0

# Location of iptables, usually /sbin/iptables
IPTABLES="/sbin/iptables"

# Choose whether DROP / REJECT will be your default "deny" rule
# Defaults to "REJECT", because reject sends the correct tcp/icmp response 
DENYACTION="REJECT"


### [LOGFILES] ###

# Common log identifier
# Since IPTables logs to (r)syslog, it is necessary to prefix all log entries somehow to ease processing
# of your logfiles. Besides this identifier, messages stemming from different rules will receive an
# additional prefix to indicate the rules that were applied to a package
LOGID="[IPT]"

# Log dropped invalid packages?
LOGINVALID=true

# Logfile prefix to identify INVALID packets
LOGPREF_INVALID="INVALID: "
 
# Logfile prefix to identify TCP flag related matches
LOGPREF_HARDEN_TCP="TCP FLAG MATCH: "

# Do you wish to Log limit exceeds/bruteforcing? Logging will be limited to 1 entry per minute
LOG_LIMITS=true

# Logfile prefix to identify matches on rate limited ports
LOGPREF_LIMIT="LIMIT EXCEEDED: "


### [UDP] ###
# This option will block OUTGOING udp packets other than DNS and NTP. This is useful in (rare) attacks of outgoing UDP floods.
# Set to true to activate UDP flood protection. Don't worry, (outgoing) DNS and NTP will still always be let through
PROTECT_UDP=false

# Deny UDP packets or rate limit them?
# set to true to drop anything but outgoing DNS. If set to false, a rate limit will apply, to set the rate limit see limits.conf
DENY_UDP=false

# Set to true to log outgoing udp flood attempts
LOG_UDP=true

# Set UDP Log prefix which will be added to logfile entries to identify these attacks
UDP_LOGPREFIX="UDP-flood attempt: "

# Limits for outgoing UDP allowance - only enforced IF udp protection is turned on
UDP_LIMIT=50/minute
UDP_BURST=150

### [HARDENING] ###
# Before the hardening rules are introduced, a few words on this. This ruleset is intended for a standalone webserver.
# This means, that it cannot possibly defend itself against a serious DDoS attack from a botnet of whatever size. While
# these rules will raise the bar for an attacker, they will also slow down your host as any legitimate traffic will need
# to pass all the rules aswell.
# Another goal many rulesets try to provide is defense against portscans. Once again: processing rules equates to 
# usage of CPU power, and costs even more ressources if you log. And while its not a good feeling to know others are 
# creeping around your doors at night, its something that you can neither effectively nor efficiently prevent; and 
# its not something you need to fear if you use a good ruleset on the ports that have to hide something. 
# So please read on with the explanations on the rules in the hardening section. Or simply trust the default values. 

# Require SYN on NEW Connections
# Any new connections needs to have the SYN tcp flag; setting this to true ensures this and blocks some attacks which
# send other tcp flags on NEW connections. On the flipside, in rare cases, timeouts can  cut off existing connections 
# that have been unused for a while. Set to false to omit this rule.
HARDEN_REQ_SYN=true

# Slow down scans for hidden ports
# The number here indicates how many new packets can be sent in certain kinds of portscan attempts that may lead to being 
# DoSSed. Setting it to 1 will keep your host alive a little longer. 
# Set it to 0 to omit this rule from your ruleset completely
# Recommended by: http://www.netfilter.org/documentation/HOWTO/de/packet-filtering-HOWTO-7.html
HARDEN_FURTIVE_SPEED=1

# /proc hardening: Follows recommendations on securing Debian
# See https://www.debian.org/doc/manuals/securing-debian-howto/ch4.de.html
# Set to true to follow those recommendations
HARDEN_PROC=true

# Martians Logging
# While above recommendations state to log packets with martian source or destination, you need to be aware of
# the drawbacks of writing logs for such stuff. The log does not drop the packets, the Kernel will handle that anyway.
# So, while logging can also show issues concerning misconfigs of your host or failures in routers, usually it can be
# turned off safely. True to log, false to turn logs off. Your decision.
HARDEN_LOG_MARTIANS=false

# Portscan paranoid level
# So every iptables script out there gives you a bunch of tcp-flag checks. More rules make a more powerful firewall, eh?
# So, here they are, and its your choice how many to enable, and whether to log them or not. Defaults to 0.
# valid entries are: 
# 0 (not using any of the tcp flag combination rules
# 1 (using XMAS and nmap rules)
# 2 (dropping every other scanning rule you'll find)
HARDEN_PARANOID=0

# turn portscan logging on/off
# IF you use tcp-flag and / or portscan defense rules, you should log the results. Only 1 Logfile entry per minute!
HARDEN_LOGGING=false

# Set to true on Syncookies to defend against SYN-flood attacks. You should set this to true.
HARDEN_SYNCOOKIES=true

# PING flood protection
# To avoid this common ICMP flood attack, there are three possible values:
# Set to 2 to rate limit ping to the rate set in HARDEN_PINGRATE (default: 1/second)
# Set to 1 to ignore all ping echo requests and turn off pinging of this host
# set to 0 to happily let anyone ping you as much as he and his botnet can.
# (Attn: there is no logging, whichever option you choose)
HARDEN_PING=2

# How many pings will be allowed per second if ICMP echo is set to be rate limited in HARD_PING?
HARDEN_PINGRATE=1